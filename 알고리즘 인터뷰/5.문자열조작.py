# isalnum() : 알파벳과 또는 숫자인지 확인하여 반환
# isdigit() : 숫자인지 확인하여 반환
# lower() : 소문자로 변환
# s[::-1] : 거꾸로 된리스트 반환
# re.sub('[^a-z0-9]',"",문자열) : a~z, 0~9인 문자열만 반환
# s.reverse() : 문자열 자체를 뒤집음(반환값없음)
# reversed()
#
# s = "안녕하세요"
# 1. s[1:4] : 녕하세
# 2. s[1:-2] : 녕하
# 3. s[1:] : 녕하세요
# 4. s[:] : 안녕하세요(똑같이 생긴 새로운 리스트를 반환함)
# 5. s[1:100] : 녕하세요(리스의크기를 넘어갈경우 최대값)
# 6. s[-1] : 요
# 7. s[-4] : 녕
# 8. s[-3:] : 하세요
# 9. s[:-3] : 안녕
# 10. s[::1] : 안녕하세요
# 11. s[::-1] : 요세하녕안
# 12. s[::2] : 안하요
#
# sorted(리스트) : 리스트를 정렬해줄뿐만아니라 문자열도 문자한개씩으로 정렬해서 반환함
# "".join(sorted(리스트)) : 문자열을 정렬하고 다시 붙일때
# 리스트.sort() : 리스트 자체를 정렬함 (None을 반환하니 주의)
#
# sorted(리스트,key=키 또는 함수)

a = ["cde", "cfc", 'abc']


def sort(a):
    return a[0], a[-1] # 키가 2개(0번째 인덱스로 비교를 하고 만약 같을 시 -1번째 인덱스로 비교)


print(sorted(a, key=sort))
# 원래대로면 abc다음에 c가 2개가 나옴 -> 그다음 순인 f가 나와 abc,cde,cfc 로 나와야함
# 하지만 키를 2개를 줘서 같을 시 두번째 키인 -1인덱스로 정렬을 하기 때문에 c가 같음 -> 다음을 비교하는게 아닌 -1인덱스 비교를 해서 abc,cfc,cde가 됨

print(sorted(a,key=lambda x: (x[0],x[-1]))) # 람다로 한줄로 끝낼수 잇음

# 코딩테스트시엔 무조건 정렬함수를 사용하는게 이득임
